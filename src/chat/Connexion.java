/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chat;

import static chat.InterfaceClient.socketClient;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;
import javax.swing.JOptionPane;

/**
 * L'interface graphique de connexion des utilisateurs avec compte en BDD
 * <li>Vérifie si tous les champs ont été rempli</li>
 * <li>Envoi au serveur les identifiants de l'utilisateur pour les vérifier dans la BDD</li>
 * <li>Récupère le droit de connexion à l'utilisateur ou pas, du serveur</li>
 * @author anamwa
 */
public class Connexion extends javax.swing.JFrame {

    /**
     * Constructeur de l'interface graphique
     */
    public Connexion() {
        initComponents();
        setLocationRelativeTo(null);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pseudo = new javax.swing.JTextField();
        passwordUser = new javax.swing.JPasswordField();
        seConnecter = new javax.swing.JButton();
        bienvenue = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        fichierField = new javax.swing.JMenu();
        editionField = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Veuillez introduire vos coordoonées, puis clickez sur se connecter pour pouvoir se connecter");

        jLabel2.setText("Pseudonyme :");

        jLabel3.setText("Mot de passe :");

        pseudo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pseudoActionPerformed(evt);
            }
        });

        passwordUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordUserActionPerformed(evt);
            }
        });

        seConnecter.setText("Se Connecter");
        seConnecter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seConnecterActionPerformed(evt);
            }
        });

        bienvenue.setText("Revenir à l'acceuil");
        bienvenue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bienvenueActionPerformed(evt);
            }
        });

        fichierField.setText("Fichier");
        jMenuBar1.add(fichierField);

        editionField.setText("Edition");
        jMenuBar1.add(editionField);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(214, 214, 214)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pseudo)
                            .addComponent(passwordUser, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(322, 322, 322)
                        .addComponent(seConnecter)
                        .addGap(38, 38, 38)
                        .addComponent(bienvenue)))
                .addContainerGap(120, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(jLabel1)
                .addGap(78, 78, 78)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(pseudo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(passwordUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 176, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seConnecter)
                    .addComponent(bienvenue))
                .addGap(154, 154, 154))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pseudoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pseudoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pseudoActionPerformed

    private void bienvenueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bienvenueActionPerformed
        // TODO add your handling code here:
        new Bienvenue();
        setVisible(false);
    }//GEN-LAST:event_bienvenueActionPerformed
    
    //Bouton pour éxecuter le code de connexion avec le serveur
    private void seConnecterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seConnecterActionPerformed
        // TODO add your handling code here:
        if (pseudo.getText().equals("") || passwordUser.getText().equals("")){  //Vérifie les champs
            JOptionPane.showMessageDialog(null, "Veuillez remplir tous les champs", "Erreur", JOptionPane.PLAIN_MESSAGE);
        }else{
           
            try{    //Envoi les ID au serveur, et récupère le droit
                String msg= "connexion#"+ pseudo.getText()+"#"+passwordUser.getText()+"#";
                socketClient = new Socket(InetAddress.getLocalHost(), 4444);
                PrintWriter donneeOut = new PrintWriter(socketClient.getOutputStream());
                donneeOut.println(msg);
                donneeOut.flush();
                
                InputStreamReader streamMessage = new InputStreamReader(socketClient.getInputStream());			
                BufferedReader donneeIn = new BufferedReader(streamMessage);
                String connecter = donneeIn.readLine();
                if (connecter.compareTo("nop")==0){ //En cas ou les IDs ne correspondent à aucune entité dans la BDD
                    JOptionPane.showMessageDialog(null, "Erreur, veuillez saisir des identifiants corrects", "Erreur", JOptionPane.PLAIN_MESSAGE);
                    pseudo.setText("");
                    passwordUser.setText("");                
                }else if(connecter.compareTo("okMDP")==0){  //Les IDs sont corrects, permission de se connecter accordée.
                    JOptionPane.showMessageDialog(null, "Bravo, vous vous êtes bien connecté", "Connecté", JOptionPane.PLAIN_MESSAGE);
                    pseudo.setText("");
                    passwordUser.setText("");
                    setVisible(false);
                    
                    UtilisateurReception threadReception = new UtilisateurReception(socketClient);  //Génère le Thread de reception
                    threadReception.start();
                }
            }catch(Exception e){
                System.out.println("Erreur " +e.getMessage());
            }
        }
    }//GEN-LAST:event_seConnecterActionPerformed

    private void passwordUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordUserActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bienvenue;
    private javax.swing.JMenu editionField;
    private javax.swing.JMenu fichierField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPasswordField passwordUser;
    private javax.swing.JTextField pseudo;
    private javax.swing.JButton seConnecter;
    // End of variables declaration//GEN-END:variables
}
