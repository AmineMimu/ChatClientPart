/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chat;

import static chat.InterfaceClient.socketClient;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;
import javax.swing.JOptionPane;

/**
 * <ul>L'interface graphique de connexion des utilisateurs visiteurs<br>sur la liste des pseudos et socket au niveau du serveur.</ul>
 * <li>Vérifie si tous les champs ont été rempli</li>
 * <li>Envoi au serveur les identifiants de l'utilisateur pour les vérifier dans la BDD</li>
 * <li>Récupère le droit de connexion à l'utilisateur ou pas, du serveur</li>
 * @author anamwa
 */
public class VisitorInterface extends javax.swing.JFrame {
    
    public static String pseudoVisitor = null;

    /**
     * Constructeur de l'IG
     */
    public VisitorInterface() {
        initComponents();
        setLocationRelativeTo(null);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        fieldPseudo = new javax.swing.JTextField();
        salonSport = new javax.swing.JButton();
        backBienvenue = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuEdition = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Pseudonyme :");

        fieldPseudo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldPseudoActionPerformed(evt);
            }
        });

        salonSport.setText("Accéder au salon");
        salonSport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salonSportActionPerformed(evt);
            }
        });

        backBienvenue.setText("Retour vers Accueil");
        backBienvenue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBienvenueActionPerformed(evt);
            }
        });

        menuFile.setText("Fichier");
        jMenuBar1.add(menuFile);

        menuEdition.setText("Edition");
        jMenuBar1.add(menuEdition);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(289, 289, 289)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(salonSport, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(backBienvenue))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fieldPseudo, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(295, 295, 295))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(163, 163, 163)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(fieldPseudo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(120, 120, 120)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salonSport)
                    .addComponent(backBienvenue))
                .addContainerGap(276, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fieldPseudoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldPseudoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldPseudoActionPerformed
    
    //Bouton d'accès au salon
    private void salonSportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salonSportActionPerformed
        // TODO add your handling code here:
        if (fieldPseudo.getText().equals("")){  //Si champs vide demande de réinsertion du Pseudo
            JOptionPane.showMessageDialog(null, "Veuillez remplir le champs Pseudonyme", "Erreur", JOptionPane.PLAIN_MESSAGE);
        }else{
            try{    //Vérification si le pseudo est disponible sur le serveur
                String msg= "visite#"+ fieldPseudo.getText();
                socketClient = new Socket(InetAddress.getLocalHost(), 4444);
                PrintWriter donneeOut = new PrintWriter(socketClient.getOutputStream());
                donneeOut.println(msg);
                donneeOut.flush();
                
                InputStreamReader streamMessage = new InputStreamReader(socketClient.getInputStream());			
                BufferedReader donneeIn = new BufferedReader(streamMessage);
                msg = donneeIn.readLine();                
                
                if (msg.compareTo("pseudoCorrect") == 0){     // Si la séquence reçu permetla connexion               
                    pseudoVisitor = fieldPseudo.getText();
                    JOptionPane.showMessageDialog(null, "Vous vous êtes bien connectés", "Congrats", JOptionPane.PLAIN_MESSAGE);
                    setVisible(false);
                    
                    VisiteurReception objt = new VisiteurReception(socketClient);
                    objt.start();                    
                }else if (msg.compareTo("pseudoExist") == 0){   //Si la séquence reçu 
                    JOptionPane.showMessageDialog(null, "Pseudonyme non dispo, veuillez choisir un autre", "Erreur", JOptionPane.PLAIN_MESSAGE);
                    fieldPseudo.setText("");
                }
            }catch(Exception e){
                System.out.println("Erreur connexion" + e.getMessage());
            }
        }
    }//GEN-LAST:event_salonSportActionPerformed
    
    //Bouton revenir à l'accueil
    private void backBienvenueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBienvenueActionPerformed
        // TODO add your handling code here:
        new Bienvenue();
        setVisible(false);
    }//GEN-LAST:event_backBienvenueActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBienvenue;
    private javax.swing.JTextField fieldPseudo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu menuEdition;
    private javax.swing.JMenu menuFile;
    private javax.swing.JButton salonSport;
    // End of variables declaration//GEN-END:variables
}
